#!/usr/bin/env python3

import os
from futures_trader import FuturesTrader

def test_symbol_validation():
    """Test symbol validation and price fetching"""
    
    print("üß™ Testing Symbol Validation and Price Fetching...")
    
    # Initialize trader
    try:
        trader = FuturesTrader()
        print("‚úÖ FuturesTrader initialized successfully")
    except Exception as e:
        print(f"‚ùå Error initializing trader: {e}")
        return
    
    # Test symbols
    test_symbols = [
        'BTCUSDT',      # Should work (popular futures symbol)
        'ETHUSDT',      # Should work (popular futures symbol)
        'BLESSUSDT',    # Might not exist (the problematic one)
        'INVALIDUSDT',  # Definitely doesn't exist
    ]
    
    print(f"\nüìä Testing {len(test_symbols)} symbols...")
    print("=" * 60)
    
    for symbol in test_symbols:
        print(f"\nüîç Testing: {symbol}")
        
        # Test symbol validation
        try:
            is_valid = trader.is_valid_futures_symbol(symbol)
            print(f"   Valid on futures: {'‚úÖ YES' if is_valid else '‚ùå NO'}")
        except Exception as e:
            print(f"   Validation error: {e}")
            continue
        
        if not is_valid:
            print(f"   ‚è≠Ô∏è  Skipping price check (invalid symbol)")
            continue
        
        # Test price fetching
        try:
            price = trader.get_current_price(symbol)
            if price:
                print(f"   Current price: ${price:.6f}")
            else:
                print(f"   ‚ùå Could not get price")
        except Exception as e:
            print(f"   Price error: {e}")
    
    print(f"\n‚úÖ Symbol validation test complete!")

if __name__ == "__main__":
    test_symbol_validation()
